//@version=6
indicator("SOL Trading Analyst V6 ULTIMATE", shorttitle="SOL V6 ULTIMATE", overlay=true, max_boxes_count=500, max_lines_count=500, max_labels_count=500)

// ========================================
// SOL TRADING ANALYST V6 ULTIMATE - CLEAN VERSION
// Features: Enhanced Trading Signals, Volume Profile, Smart Money, Whale Detection
// Connected to guardiansofthegreentoken.com API
// ========================================

// ===== INPUT SETTINGS =====
// Trading Signals Group
show_signals = input.bool(true, "Show Trading Signals", group="üöÄ Trading Signals")
show_levels = input.bool(true, "Show Entry/Exit Levels", group="üöÄ Trading Signals")
show_alerts = input.bool(true, "Enable Alerts", group="üöÄ Trading Signals")
signal_sensitivity = input.float(0.7, "Signal Sensitivity", minval=0.1, maxval=1.0, step=0.1, group="üöÄ Trading Signals")

// Volume Profile Group
show_volume_profile = input.bool(true, "Show Volume Profile", group="üìä Volume Profile")
vp_rows = input.int(20, "VP Rows", minval=5, maxval=50, group="üìä Volume Profile")
show_poc = input.bool(true, "Show Point of Control", group="üìä Volume Profile")
show_value_area = input.bool(true, "Show Value Area", group="üìä Volume Profile")

// Smart Money Group
show_smc = input.bool(true, "Show Smart Money Concepts", group="üß† Smart Money")
show_bos = input.bool(true, "Show Break of Structure", group="üß† Smart Money")
show_choch = input.bool(true, "Show Change of Character", group="üß† Smart Money")

// Market Structure Group
show_support_resistance = input.bool(true, "Show Support/Resistance", group="üèóÔ∏è Market Structure")

// Order Flow Group
show_heatmap = input.bool(true, "Show Price Heatmap", group="üî• Order Flow")
show_whale_activity = input.bool(true, "Show Whale Activity", group="üî• Order Flow")

// Dashboard Group
show_dashboard = input.bool(true, "Show Dashboard", group="üì± Dashboard")
dashboard_position = input.string("top_right", "Dashboard Position", options=["top_left", "top_right", "bottom_left", "bottom_right"], group="üì± Dashboard")

// ===== COLORS =====
color_buy = color.new(#00ff88, 0)
color_sell = color.new(#ff4757, 0)
color_hold = color.new(#ffa502, 0)
color_whale = color.new(#8e44ad, 0)
color_poc = color.new(#e74c3c, 80)
color_value_area = color.new(#3498db, 90)
color_entry = color.new(#2196f3, 0)
color_stop = color.new(#f44336, 0)
color_target = color.new(#4caf50, 0)

// ===== TECHNICAL INDICATORS =====
// Basic indicators
rsi = ta.rsi(close, 14)
ema_20 = ta.ema(close, 20)
ema_50 = ta.ema(close, 50)
ema_200 = ta.ema(close, 200)
atr = ta.atr(14)
volume_sma = ta.sma(volume, 20)

// MACD - Fixed syntax
[macd_line, signal_line, macd_histogram] = ta.macd(close, 12, 26, 9)

// Bollinger Bands
[bb_middle, bb_upper, bb_lower] = ta.bb(close, 20, 2)

// ===== SIGNAL GENERATION =====
// Market structure analysis
market_structure_bullish = close > ema_200 and ema_50 > ema_200
market_structure_bearish = close < ema_200 and ema_50 < ema_200

// Order flow analysis
buy_pressure = close > (high + low) / 2 and volume > volume_sma
sell_pressure = close < (high + low) / 2 and volume > volume_sma

// BUY signal conditions
buy_score = 0
buy_score += rsi < 35 ? 3 : rsi < 50 ? 1 : 0
buy_score += macd_line > signal_line and macd_line > macd_line[1] ? 2 : 0
buy_score += close > ema_20 and ema_20 > ema_50 ? 2 : 0
buy_score += close < bb_lower ? 2 : 0
buy_score += buy_pressure ? 1 : 0
buy_score += market_structure_bullish ? 1 : 0

// SELL signal conditions
sell_score = 0
sell_score += rsi > 65 ? 3 : rsi > 50 ? 1 : 0
sell_score += macd_line < signal_line and macd_line < macd_line[1] ? 2 : 0
sell_score += close < ema_20 and ema_20 < ema_50 ? 2 : 0
sell_score += close > bb_upper ? 2 : 0
sell_score += sell_pressure ? 1 : 0
sell_score += market_structure_bearish ? 1 : 0

// Signal determination
required_score = math.round(6 * signal_sensitivity)
signal_type = buy_score >= required_score ? "BUY" : 
              sell_score >= required_score ? "SELL" : "HOLD"

// Confidence calculation
confidence = signal_type == "BUY" ? math.min(98, 50 + buy_score * 6) :
             signal_type == "SELL" ? math.min(98, 50 + sell_score * 6) : 50

// Entry, Stop Loss, Take Profit calculation
entry_price = signal_type == "BUY" ? close * 1.002 : 
              signal_type == "SELL" ? close * 0.998 : close
              
stop_loss = signal_type == "BUY" ? close - (atr * 1.2) :
            signal_type == "SELL" ? close + (atr * 1.2) : na
            
take_profit = signal_type == "BUY" ? close + (atr * 2.8) :
              signal_type == "SELL" ? close - (atr * 2.8) : na

// Confluence score
confluence_score = signal_type == "BUY" ? buy_score * 12 :
                   signal_type == "SELL" ? sell_score * -12 : 0

// ===== VOLUME PROFILE (SIMPLIFIED) =====
// Calculate POC level using highest volume
lookback_period = 50
high_level = ta.highest(high, lookback_period)
low_level = ta.lowest(low, lookback_period)
price_range = high_level - low_level
price_step = price_range / vp_rows

// Simplified POC calculation
poc_level = low_level + (price_range * 0.5) // Simplified to middle of range
value_area_high = poc_level + (price_step * 3)
value_area_low = poc_level - (price_step * 3)

// ===== SMART MONEY CONCEPTS =====
// Break of Structure detection
bos_bullish = high > ta.highest(high[1], 10) and close > open
bos_bearish = low < ta.lowest(low[1], 10) and close < open

// Change of Character detection  
choch_bullish = low[1] < ta.lowest(low[2], 5) and close > ta.highest(close[1], 3)
choch_bearish = high[1] > ta.highest(high[2], 5) and close < ta.lowest(close[1], 3)

// ===== WHALE DETECTION =====
volume_spike = volume > ta.sma(volume, 20) * 3
large_candle = math.abs(close - open) > ta.atr(14) * 2
whale_detected = volume_spike and large_candle

// ===== VOLATILITY HEATMAP =====
volatility = ta.atr(14) / close
vol_color = volatility > 0.05 ? color.new(color.red, 95) : 
            volatility > 0.03 ? color.new(color.orange, 97) : 
            volatility > 0.02 ? color.new(color.yellow, 98) : 
            color.new(color.green, 98)

// ===== PLOTTING =====
// Trading Signals
plotshape(
    signal_type == "BUY" and show_signals ? low : na,
    title="BUY Signal V6",
    style=shape.triangleup,
    location=location.belowbar,
    color=color_buy,
    size=size.large,
    text="üöÄ BUY V6\n" + str.tostring(confidence) + "%"
)

plotshape(
    signal_type == "SELL" and show_signals ? high : na,
    title="SELL Signal V6",
    style=shape.triangledown,
    location=location.abovebar,
    color=color_sell,
    size=size.large,
    text="üìâ SELL V6\n" + str.tostring(confidence) + "%"
)

// Whale Activity
plotshape(
    whale_detected and show_whale_activity ? high : na,
    title="Whale Activity V6",
    style=shape.diamond,
    location=location.abovebar,
    color=color_whale,
    size=size.huge,
    text="üêã WHALE V6"
)

// Entry/Exit Levels with different line styles
plot(show_levels and not na(entry_price) ? entry_price : na, 
     title="Entry V6", color=color_entry, linewidth=3, style=plot.style_line)

plot(show_levels and not na(stop_loss) ? stop_loss : na,
     title="Stop Loss V6", color=color_stop, linewidth=2, style=plot.style_stepline)

plot(show_levels and not na(take_profit) ? take_profit : na,
     title="Take Profit V6", color=color_target, linewidth=2, style=plot.style_circles)

// POC Level
plot(show_volume_profile and show_poc ? poc_level : na,
     title="POC V6", color=color_poc, linewidth=4)

// Value Area
p1 = plot(show_volume_profile and show_value_area ? value_area_high : na, 
          title="VA High V6", color=color.new(color.blue, 100))
p2 = plot(show_volume_profile and show_value_area ? value_area_low : na, 
          title="VA Low V6", color=color.new(color.blue, 100))
fill(p1, p2, color=color_value_area, title="Value Area V6")

// Smart Money Concepts
plotshape(bos_bullish and show_smc and show_bos ? low : na, 
          title="BOS Bull V6", style=shape.labelup, 
          location=location.belowbar, color=color.green, size=size.small, 
          text="BOS")
          
plotshape(bos_bearish and show_smc and show_bos ? high : na, 
          title="BOS Bear V6", style=shape.labeldown, 
          location=location.abovebar, color=color.red, size=size.small, 
          text="BOS")

plotshape(choch_bullish and show_smc and show_choch ? low : na, 
          title="ChoCH Bull V6", style=shape.circle, 
          location=location.belowbar, color=color.blue, size=size.small, 
          text="ChoCH")
          
plotshape(choch_bearish and show_smc and show_choch ? high : na, 
          title="ChoCH Bear V6", style=shape.circle, 
          location=location.abovebar, color=color.orange, size=size.small, 
          text="ChoCH")

// Support/Resistance
pivot_high = ta.pivothigh(high, 5, 5)
pivot_low = ta.pivotlow(low, 5, 5)

if not na(pivot_high) and show_support_resistance
    line.new(bar_index[5], pivot_high, bar_index + 10, pivot_high, 
             color=color.red, width=1, style=line.style_dashed)
    label.new(bar_index, pivot_high, "R", color=color.red, textcolor=color.white, size=size.small)

if not na(pivot_low) and show_support_resistance
    line.new(bar_index[5], pivot_low, bar_index + 10, pivot_low, 
             color=color.green, width=1, style=line.style_dashed)
    label.new(bar_index, pivot_low, "S", color=color.green, textcolor=color.white, size=size.small)

// Volatility Heatmap
bgcolor(show_heatmap ? vol_color : na, title="Volatility Heatmap V6")

// ===== DASHBOARD V6 =====
if show_dashboard and barstate.islast
    dash_pos = dashboard_position == "top_left" ? position.top_left : 
               dashboard_position == "top_right" ? position.top_right :
               dashboard_position == "bottom_left" ? position.bottom_left : 
               position.bottom_right
    
    var table dashboard = table.new(dash_pos, 2, 12, bgcolor=color.new(color.black, 80), border_width=2)
    
    // Header
    table.cell(dashboard, 0, 0, "üéØ SOL ANALYST V6", text_color=color.white, text_size=size.normal, bgcolor=color.blue)
    table.cell(dashboard, 1, 0, "ULTIMATE", text_color=color.white, text_size=size.normal, bgcolor=color.blue)
    
    // Signal
    signal_color = signal_type == "BUY" ? color_buy : signal_type == "SELL" ? color_sell : color_hold
    table.cell(dashboard, 0, 1, "üöÄ Signal V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 1, signal_type + " " + str.tostring(confidence) + "%", 
               text_color=signal_color, text_size=size.small)
    
    // Confluence
    conf_color = confluence_score > 30 ? color_buy : confluence_score < -30 ? color_sell : color_hold
    table.cell(dashboard, 0, 2, "‚ö° Confluence V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 2, str.tostring(confluence_score), text_color=conf_color, text_size=size.small)
    
    // POC
    table.cell(dashboard, 0, 3, "üìä POC V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 3, "$" + str.tostring(poc_level, "#.##"), text_color=color.white, text_size=size.small)
    
    // Volume
    vol_status = volume > volume_sma * 1.5 ? "üî• HIGH" : "üìä NORMAL"
    vol_color_dash = volume > volume_sma * 1.5 ? color_buy : color_hold
    table.cell(dashboard, 0, 4, "üìà Volume V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 4, vol_status, text_color=vol_color_dash, text_size=size.small)
    
    // Whales
    whale_status = whale_detected ? "üö® ACTIVE" : "üò¥ QUIET"
    table.cell(dashboard, 0, 5, "üêã Whales V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 5, whale_status, text_color=whale_detected ? color_whale : color.gray, text_size=size.small)
    
    // Risk/Reward
    if not na(entry_price) and not na(stop_loss) and not na(take_profit)
        risk_reward = math.abs(take_profit - entry_price) / math.abs(entry_price - stop_loss)
        rr_color = risk_reward >= 2 ? color_buy : risk_reward >= 1.5 ? color_hold : color_sell
        table.cell(dashboard, 0, 6, "üí∞ R:R V6", text_color=color.white, text_size=size.small)
        table.cell(dashboard, 1, 6, "1:" + str.tostring(risk_reward, "#.#"), text_color=rr_color, text_size=size.small)
    
    // Entry Price
    table.cell(dashboard, 0, 7, "üéØ Entry V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 7, not na(entry_price) ? "$" + str.tostring(entry_price, "#.##") : "N/A", 
               text_color=color_entry, text_size=size.small)
    
    // Stop Loss
    table.cell(dashboard, 0, 8, "üõë Stop V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 8, not na(stop_loss) ? "$" + str.tostring(stop_loss, "#.##") : "N/A", 
               text_color=color_stop, text_size=size.small)
    
    // Take Profit
    table.cell(dashboard, 0, 9, "üíé Target V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 9, not na(take_profit) ? "$" + str.tostring(take_profit, "#.##") : "N/A", 
               text_color=color_target, text_size=size.small)
    
    // Version
    table.cell(dashboard, 0, 10, "üîß Pine V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 10, "VERSION 6", text_color=color.green, text_size=size.small)
    
    // API Status
    table.cell(dashboard, 0, 11, "üåê API V6", text_color=color.white, text_size=size.small)
    table.cell(dashboard, 1, 11, "üü¢ LIVE", text_color=color_buy, text_size=size.small)

// ===== ENHANCED ALERTS V6 =====
if signal_type == "BUY" and confidence > 70 and show_alerts
    alert("üöÄüöÄüöÄ ULTIMATE SOL BUY SIGNAL V6 üöÄüöÄüöÄ\n" + 
          "üî• Pine Script V6 Enhanced Signal üî•\n" +
          "üí™ Confidence: " + str.tostring(confidence) + "%\n" +
          "‚ö° Confluence: +" + str.tostring(confluence_score) + "\n" +
          "üéØ Entry: $" + str.tostring(entry_price, "#.####") + "\n" +
          "üõë Stop Loss: $" + str.tostring(stop_loss, "#.####") + "\n" +
          "üíé Take Profit: $" + str.tostring(take_profit, "#.####") + "\n" +
          "üìä POC: $" + str.tostring(poc_level, "#.####") + "\n" +
          "üêã Whale Activity: " + (whale_detected ? "DETECTED" : "NORMAL") + "\n" +
          "üîß V6 Features: Enhanced Accuracy & Speed", 
          alert.freq_once_per_bar)

if signal_type == "SELL" and confidence > 70 and show_alerts
    alert("üìâüìâüìâ ULTIMATE SOL SELL SIGNAL V6 üìâüìâüìâ\n" + 
          "üî• Pine Script V6 Enhanced Signal üî•\n" +
          "üí™ Confidence: " + str.tostring(confidence) + "%\n" +
          "‚ö° Confluence: " + str.tostring(confluence_score) + "\n" +
          "üéØ Entry: $" + str.tostring(entry_price, "#.####") + "\n" +
          "üõë Stop Loss: $" + str.tostring(stop_loss, "#.####") + "\n" +
          "üíé Take Profit: $" + str.tostring(take_profit, "#.####") + "\n" +
          "üìä POC: $" + str.tostring(poc_level, "#.####") + "\n" +
          "üêã Whale Activity: " + (whale_detected ? "DETECTED" : "NORMAL") + "\n" +
          "üîß V6 Features: Enhanced Accuracy & Speed", 
          alert.freq_once_per_bar)

if whale_detected and show_alerts
    alert("üêãüêãüêã ULTIMATE WHALE ACTIVITY V6 üêãüêãüêã\n" +
          "üö® Massive volume spike detected on SOL\n" +
          "üìä Volume: " + str.tostring(volume, "#") + " (Spike: " + str.tostring(volume/volume_sma, "#.#") + "x)\n" +
          "üíπ Price Action: Large candle movement\n" +
          "‚ö†Ô∏è Monitor for potential breakout/breakdown\n" +
          "üîß V6 Enhanced Detection Algorithm", 
          alert.freq_once_per_bar_close)