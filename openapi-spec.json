{
  "openapi": "3.1.0",
  "info": {
    "title": "SOL Crypto Trading Data Gateway",
    "description": "Advanced institutional-grade SOL-USDT-SWAP perpetual futures trading data gateway with 8-layer SharpSignalEngine analysis, live trading signals, and premium orderbook capabilities.\n\nFeatures:\n- Real-time BUY/SELL/HOLD trading signals with risk management\n- Multi-timeframe synchronized analysis (15M, 1H, 4H, 1D)\n- Advanced derivatives intelligence (CVD, SMC, Order Flow, Fibonacci)\n- Premium VIP8+ institutional analytics and liquidity heatmaps\n- Sub-200ms response times and enterprise-grade reliability\n\nPerfect for AI-powered trading analysis and institutional derivatives trading.\n",
    "version": "2.0.0",
    "contact": {
      "name": "SOL Trading Gateway",
      "url": "https://guardiansofthegreentoken.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://guardiansofthegreentoken.com",
      "description": "Production server with custom domain"
    }
  ],
  "security": [],
  "paths": {
    "/api/sol/complete": {
      "get": {
        "operationId": "getCompleteSOLData",
        "summary": "Get comprehensive SOL trading data",
        "description": "Returns complete real-time SOL/USDT trading data including:\n- Real-time ticker (price, 24h change, volume)\n- Order book depth with bid/ask spreads\n- Recent trades with buy/sell indicators\n- Multi-timeframe candlestick data (5m, 15m, 30m, 1H, 4H, 1D, 1W)\n- Smart Money Concepts (SMC) analysis\n- Market depth visualization data\n\nPerfect for comprehensive market analysis and AI-driven trading insights.\n",
        "responses": {
          "200": {
            "description": "Complete SOL trading data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "object",
                          "properties": {
                            "symbol": {
                              "type": "string",
                              "example": "SOL-USDT"
                            },
                            "price": {
                              "type": "string",
                              "example": "202.45"
                            },
                            "change24h": {
                              "type": "string",
                              "example": "3.24"
                            },
                            "changePercent24h": {
                              "type": "string",
                              "example": "1.63"
                            },
                            "volume24h": {
                              "type": "string",
                              "example": "45287639.82"
                            },
                            "high24h": {
                              "type": "string",
                              "example": "205.80"
                            },
                            "low24h": {
                              "type": "string",
                              "example": "196.12"
                            }
                          }
                        },
                        "orderBook": {
                          "type": "object",
                          "properties": {
                            "bids": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "asks": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "trades": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "size": {
                                "type": "string"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell"
                                ]
                              },
                              "timestamp": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "candles": {
                          "type": "object",
                          "properties": {
                            "5m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "15m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "30m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1H": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "4H": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1D": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1W": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "smc": {
                          "type": "object",
                          "properties": {
                            "timeframe": {
                              "type": "string",
                              "example": "1H"
                            },
                            "trend": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "neutral"
                              ]
                            },
                            "structure": {
                              "type": "string",
                              "enum": [
                                "BOS",
                                "CHoCH",
                                "neutral"
                              ]
                            },
                            "keyLevels": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "support",
                                      "resistance"
                                    ]
                                  },
                                  "strength": {
                                    "type": "string",
                                    "enum": [
                                      "weak",
                                      "medium",
                                      "strong"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded (100 requests per minute)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/funding": {
      "get": {
        "operationId": "getSOLFundingRate",
        "summary": "Get SOL funding rate data",
        "description": "Returns current and historical funding rate data for SOL perpetual futures.\nFunding rates indicate market sentiment and can signal potential price movements.\n",
        "responses": {
          "200": {
            "description": "SOL funding rate data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instId": {
                          "type": "string",
                          "example": "SOL-USDT-SWAP"
                        },
                        "fundingRate": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "nextFundingRate": {
                          "type": "string",
                          "example": "0.00012"
                        },
                        "nextFundingTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/open-interest": {
      "get": {
        "operationId": "getSOLOpenInterest",
        "summary": "Get SOL open interest data",
        "description": "Returns open interest data for SOL futures, indicating market participation and potential volatility.\nHigh open interest with rising prices suggests strong bullish sentiment.\n",
        "responses": {
          "200": {
            "description": "SOL open interest data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instId": {
                          "type": "string",
                          "example": "SOL-USDT-SWAP"
                        },
                        "oi": {
                          "type": "string",
                          "example": "12584792.5"
                        },
                        "oiCcy": {
                          "type": "string",
                          "example": "2547856432.85"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/volume-profile": {
      "get": {
        "operationId": "getSOLVolumeProfile",
        "summary": "Get SOL volume profile analysis",
        "description": "Returns volume profile data showing price levels with highest trading activity.\nIncludes Point of Control (POC) and value area analysis for support/resistance identification.\n",
        "responses": {
          "200": {
            "description": "SOL volume profile data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "poc": {
                          "type": "string",
                          "example": "202.45",
                          "description": "Point of Control - price level with highest volume"
                        },
                        "valueAreaHigh": {
                          "type": "string",
                          "example": "205.80"
                        },
                        "valueAreaLow": {
                          "type": "string",
                          "example": "198.20"
                        },
                        "volumeProfile": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "volume": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/smc": {
      "get": {
        "operationId": "getSOLSmartMoneyConcepts",
        "summary": "Get SOL Smart Money Concepts analysis",
        "description": "Returns advanced Smart Money Concepts (SMC) analysis including:\n- Market structure analysis (BOS/CHoCH detection)\n- Trend identification across multiple timeframes\n- Key support and resistance levels\n- Order block identification\n- Liquidity grab analysis\n\nPerfect for institutional-style trading analysis.\n",
        "responses": {
          "200": {
            "description": "SOL Smart Money Concepts analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "timeframe": {
                          "type": "string",
                          "example": "1H"
                        },
                        "trend": {
                          "type": "string",
                          "enum": [
                            "bullish",
                            "bearish",
                            "neutral"
                          ],
                          "example": "bullish"
                        },
                        "structure": {
                          "type": "string",
                          "enum": [
                            "BOS",
                            "CHoCH",
                            "neutral"
                          ],
                          "example": "BOS",
                          "description": "Break of Structure or Change of Character"
                        },
                        "keyLevels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string",
                                "example": "200.50"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "support",
                                  "resistance",
                                  "order_block"
                                ]
                              },
                              "strength": {
                                "type": "string",
                                "enum": [
                                  "weak",
                                  "medium",
                                  "strong"
                                ]
                              },
                              "timeframe": {
                                "type": "string",
                                "example": "1H"
                              }
                            }
                          }
                        },
                        "liquidityLevels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "buy_liquidity",
                                  "sell_liquidity"
                                ]
                              },
                              "volume": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "analysis": {
                          "type": "string",
                          "example": "Strong bullish momentum with BOS confirmed. Key resistance at 205.80."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/trading-signals": {
      "get": {
        "operationId": "getSOLTradingSignals",
        "summary": "Get live SOL trading signals with risk management",
        "description": "Returns real-time BUY/SELL/HOLD trading signals with complete risk management:\n- Signal strength and confidence levels (0-100%)\n- Entry, stop loss, and take profit prices\n- 1:2 risk-reward ratios\n- Multi-timeframe confluence analysis\n- Real-time market conditions assessment\n\nPerfect for automated trading systems and AI trading decisions.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for signal analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "15m"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Live trading signals with risk management",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "primary": {
                          "type": "object",
                          "properties": {
                            "signal": {
                              "type": "string",
                              "enum": [
                                "BUY",
                                "SELL",
                                "HOLD"
                              ],
                              "example": "BUY"
                            },
                            "confidence": {
                              "type": "number",
                              "example": 75,
                              "description": "Signal confidence percentage (0-100)"
                            },
                            "strength": {
                              "type": "string",
                              "enum": [
                                "weak",
                                "moderate",
                                "strong"
                              ],
                              "example": "moderate"
                            },
                            "entry": {
                              "type": "string",
                              "example": "208.55"
                            },
                            "stopLoss": {
                              "type": "string",
                              "example": "205.42"
                            },
                            "takeProfit1": {
                              "type": "string",
                              "example": "214.81"
                            },
                            "takeProfit2": {
                              "type": "string",
                              "example": "221.07"
                            },
                            "riskReward": {
                              "type": "string",
                              "example": "1:2"
                            },
                            "reasoning": {
                              "type": "string",
                              "example": "Multi-timeframe confluence shows bullish momentum"
                            }
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "example": "15m"
                        },
                        "confluenceScore": {
                          "type": "number",
                          "example": 47,
                          "description": "Overall confluence score (-100 to +100)"
                        },
                        "marketConditions": {
                          "type": "object",
                          "properties": {
                            "trend": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "ranging"
                              ]
                            },
                            "volatility": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ]
                            },
                            "volume": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ]
                            }
                          }
                        },
                        "alerts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "priority": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/signal-history": {
      "get": {
        "operationId": "getSOLSignalHistory",
        "summary": "Get historical trading signals performance",
        "description": "Returns historical trading signals with performance tracking:\n- Past signals with actual outcomes\n- Win/loss ratios and performance metrics\n- Signal accuracy statistics\n- Historical confluence scores\n",
        "responses": {
          "200": {
            "description": "Historical trading signals data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "signal": {
                            "type": "string",
                            "enum": [
                              "BUY",
                              "SELL",
                              "HOLD"
                            ]
                          },
                          "confidence": {
                            "type": "number"
                          },
                          "entry": {
                            "type": "string"
                          },
                          "outcome": {
                            "type": "string",
                            "enum": [
                              "win",
                              "loss",
                              "pending"
                            ]
                          },
                          "pnl": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/confluence": {
      "get": {
        "operationId": "getSOLConfluenceAnalysis",
        "summary": "Get SOL confluence analysis with 8-layer scoring",
        "description": "Returns comprehensive confluence analysis combining multiple indicators:\n- 8-layer SharpSignalEngine scoring\n- Technical, fundamental, and sentiment analysis\n- Multi-timeframe alignment\n- Overall confluence score (-100 to +100)\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for confluence analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL confluence analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "overallScore": {
                          "type": "number",
                          "example": 47,
                          "description": "Confluence score from -100 to +100"
                        },
                        "sentiment": {
                          "type": "string",
                          "enum": [
                            "bearish",
                            "neutral",
                            "bullish"
                          ]
                        },
                        "layers": {
                          "type": "object",
                          "properties": {
                            "technical": {
                              "type": "number"
                            },
                            "smc": {
                              "type": "number"
                            },
                            "volume": {
                              "type": "number"
                            },
                            "orderFlow": {
                              "type": "number"
                            },
                            "fibonacci": {
                              "type": "number"
                            },
                            "derivatives": {
                              "type": "number"
                            },
                            "momentum": {
                              "type": "number"
                            },
                            "sentiment": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/cvd": {
      "get": {
        "operationId": "getSOLCVDAnalysis",
        "summary": "Get SOL Cumulative Volume Delta analysis",
        "description": "Returns advanced Volume Delta analysis for institutional trading:\n- Cumulative Volume Delta (CVD) trends\n- Buy/sell aggression analysis\n- Absorption patterns and smart money detection\n- Divergence analysis for reversal signals\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for CVD analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL CVD analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentCVD": {
                          "type": "string",
                          "example": "1245678.50"
                        },
                        "deltaChange": {
                          "type": "string",
                          "example": "+15432.25"
                        },
                        "buyerSellerAggression": {
                          "type": "object",
                          "properties": {
                            "dominantSide": {
                              "type": "string",
                              "enum": [
                                "buyers",
                                "sellers",
                                "balanced"
                              ]
                            },
                            "buyerAggression": {
                              "type": "object",
                              "properties": {
                                "percentage": {
                                  "type": "number"
                                },
                                "strength": {
                                  "type": "string",
                                  "enum": [
                                    "weak",
                                    "moderate",
                                    "strong",
                                    "extreme"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/technical": {
      "get": {
        "operationId": "getSOLTechnicalIndicators",
        "summary": "Get SOL technical indicators analysis",
        "description": "Returns comprehensive technical analysis including:\n- RSI, MACD, EMA crossovers\n- Bollinger Bands and volatility metrics\n- Support/resistance levels\n- Momentum oscillators and trend indicators\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for technical analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL technical indicators",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rsi": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "example": 58.42
                            },
                            "signal": {
                              "type": "string",
                              "enum": [
                                "oversold",
                                "neutral",
                                "overbought"
                              ]
                            }
                          }
                        },
                        "macd": {
                          "type": "object",
                          "properties": {
                            "line": {
                              "type": "number"
                            },
                            "signal": {
                              "type": "number"
                            },
                            "histogram": {
                              "type": "number"
                            },
                            "crossover": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "none"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/fibonacci": {
      "get": {
        "operationId": "getSOLFibonacciAnalysis",
        "summary": "Get SOL Fibonacci retracement and extension analysis",
        "description": "Returns Fibonacci analysis for key trading levels:\n- Fibonacci retracement levels (23.6%, 38.2%, 50%, 61.8%, 78.6%)\n- Extension levels for profit targets\n- Golden zone analysis (61.8% - 78.6%)\n- Confluence with price action\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for Fibonacci analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL Fibonacci analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "retracements": {
                          "type": "object",
                          "properties": {
                            "23.6": {
                              "type": "string",
                              "example": "205.45"
                            },
                            "38.2": {
                              "type": "string",
                              "example": "203.20"
                            },
                            "50.0": {
                              "type": "string",
                              "example": "201.50"
                            },
                            "61.8": {
                              "type": "string",
                              "example": "199.80"
                            },
                            "78.6": {
                              "type": "string",
                              "example": "197.65"
                            }
                          }
                        },
                        "goldenZone": {
                          "type": "object",
                          "properties": {
                            "high": {
                              "type": "string"
                            },
                            "low": {
                              "type": "string"
                            },
                            "confidence": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/order-flow": {
      "get": {
        "operationId": "getSOLOrderFlowAnalysis",
        "summary": "Get SOL order flow and market microstructure analysis",
        "description": "Returns detailed order flow analysis:\n- Aggressive vs passive order ratios\n- Large order detection and whale activity\n- Market maker vs taker analysis\n- Liquidity absorption patterns\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for order flow analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL order flow analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "aggressiveRatio": {
                          "type": "number",
                          "example": 0.68,
                          "description": "Ratio of aggressive orders (0-1)"
                        },
                        "whaleActivity": {
                          "type": "object",
                          "properties": {
                            "detected": {
                              "type": "boolean"
                            },
                            "count": {
                              "type": "number"
                            },
                            "averageSize": {
                              "type": "string"
                            },
                            "sentiment": {
                              "type": "string",
                              "enum": [
                                "buying",
                                "selling",
                                "neutral"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/premium/institutional-analytics": {
      "get": {
        "operationId": "getPremiumInstitutionalAnalytics",
        "summary": "Get premium institutional-grade analytics (VIP8+)",
        "description": "Returns advanced institutional analytics for VIP8+ users:\n- Enhanced whale detection with institutional footprints\n- Market maker flow analysis\n- Advanced derivatives positioning\n- Institutional-grade risk metrics\n",
        "responses": {
          "200": {
            "description": "Premium institutional analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "example": "VIP8"
                        },
                        "whaleDetection": {
                          "type": "object",
                          "properties": {
                            "score": {
                              "type": "number",
                              "example": 87
                            },
                            "activity": {
                              "type": "string",
                              "enum": [
                                "accumulation",
                                "distribution",
                                "neutral"
                              ]
                            }
                          }
                        },
                        "institutionalFlow": {
                          "type": "object",
                          "properties": {
                            "direction": {
                              "type": "string",
                              "enum": [
                                "inflow",
                                "outflow",
                                "neutral"
                              ]
                            },
                            "confidence": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/premium/tier-status": {
      "get": {
        "operationId": "getPremiumTierStatus",
        "summary": "Get premium subscription tier status and features",
        "description": "Returns current premium tier status and available features:\n- Current subscription tier (Standard, VIP1, VIP8, Institutional)\n- Available features and analytics depth\n- Upgrade information and pricing\n",
        "responses": {
          "200": {
            "description": "Premium tier status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentTier": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "VIP1",
                            "VIP8",
                            "Institutional"
                          ],
                          "example": "VIP8"
                        },
                        "features": {
                          "type": "object",
                          "properties": {
                            "orderbookDepth": {
                              "type": "number",
                              "example": 500
                            },
                            "updateFrequency": {
                              "type": "string",
                              "example": "10ms"
                            },
                            "analytics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/premium-orderbook": {
      "get": {
        "operationId": "getSOLPremiumOrderbook",
        "summary": "Get SOL premium orderbook with enhanced depth (VIP+ only)",
        "description": "Returns premium orderbook data with enhanced features:\n- Up to 1000-level depth (tier-dependent)\n- Sub-10ms updates for VIP8+\n- Market maker identification\n- Large order wall detection\n- Institutional-grade analytics\n",
        "responses": {
          "200": {
            "description": "SOL premium orderbook data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "example": "VIP8"
                        },
                        "depth": {
                          "type": "number",
                          "example": 500
                        },
                        "updateFrequency": {
                          "type": "string",
                          "example": "10ms"
                        },
                        "orderbook": {
                          "type": "object",
                          "properties": {
                            "bids": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "string"
                                  },
                                  "isLarge": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "asks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "string"
                                  },
                                  "isLarge": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "analytics": {
                          "type": "object",
                          "properties": {
                            "imbalance": {
                              "type": "string"
                            },
                            "walls": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "operationId": "getHealthStatus",
        "summary": "Get system health status",
        "description": "Returns comprehensive system health status including:\n- API response times and performance metrics\n- WebSocket connection status\n- Cache performance and hit ratios\n- Memory usage and system uptime\n\nUsed for monitoring system reliability and performance.\n",
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "healthy",
                        "degraded"
                      ],
                      "example": "healthy"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 3600
                    },
                    "memory": {
                      "type": "object",
                      "properties": {
                        "used": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "percentage": {
                          "type": "number"
                        }
                      }
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "okx_api": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        },
                        "websocket": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        },
                        "cache": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is degraded or unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "degraded"
                    },
                    "issues": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "operationId": "getSystemMetrics",
        "summary": "Get detailed system metrics",
        "description": "Returns comprehensive system performance metrics including:\n- HTTP request latencies (P50, P95, P99)\n- Cache hit/miss ratios and performance\n- WebSocket connection statistics\n- API call success rates and error counts\n\nPerfect for performance monitoring and optimization analysis.\n",
        "responses": {
          "200": {
            "description": "System metrics data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uptime": {
                          "type": "number",
                          "example": 3600
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "used": {
                              "type": "number"
                            },
                            "total": {
                              "type": "number"
                            },
                            "percentage": {
                              "type": "number"
                            }
                          }
                        },
                        "http": {
                          "type": "object",
                          "properties": {
                            "requests_total": {
                              "type": "number"
                            },
                            "requests_per_minute": {
                              "type": "number"
                            },
                            "avg_response_time": {
                              "type": "number"
                            },
                            "p95_response_time": {
                              "type": "number"
                            },
                            "error_rate": {
                              "type": "number"
                            }
                          }
                        },
                        "cache": {
                          "type": "object",
                          "properties": {
                            "hit_ratio": {
                              "type": "number",
                              "example": 0.75
                            },
                            "size": {
                              "type": "number"
                            },
                            "hits": {
                              "type": "number"
                            },
                            "misses": {
                              "type": "number"
                            }
                          }
                        },
                        "websocket": {
                          "type": "object",
                          "properties": {
                            "active_connections": {
                              "type": "number"
                            },
                            "total_connections": {
                              "type": "number"
                            },
                            "reconnect_rate": {
                              "type": "number"
                            }
                          }
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Rate limit exceeded. Please try again later."
          },
          "code": {
            "type": "string",
            "example": "RATE_LIMIT_EXCEEDED"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {}
  },
  "tags": [
    {
      "name": "Trading Signals",
      "description": "Live trading signals with risk management and entry/exit points"
    },
    {
      "name": "Trading Data",
      "description": "Real-time SOL trading data and market analysis"
    },
    {
      "name": "Advanced Analysis",
      "description": "Confluence, CVD, technical indicators, and Fibonacci analysis"
    },
    {
      "name": "Smart Money Concepts",
      "description": "Institutional SMC analysis and order flow detection"
    },
    {
      "name": "Premium Features",
      "description": "VIP+ institutional analytics and enhanced orderbook data"
    },
    {
      "name": "System Monitoring",
      "description": "Health checks and performance metrics"
    }
  ],
  "externalDocs": {
    "description": "SOL Trading Gateway Documentation",
    "url": "https://guardiansofthegreentoken.com"
  }
}