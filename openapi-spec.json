{
  "openapi": "3.1.0",
  "info": {
    "title": "CryptoSat Intelligence - Multi-Asset Trading Data Gateway with CoinGlass Premium Intelligence",
    "description": "Advanced institutional-grade trading data gateway with 8-layer SharpSignalEngine analysis, live trading signals, and premium CoinGlass institutional intelligence.\n\nCORE FEATURES:\n- Real-time BUY/SELL/HOLD trading signals with risk management\n- Multi-timeframe synchronized analysis (15M, 1H, 4H, 1D)\n- Advanced derivatives intelligence (CVD, SMC, Order Flow, Fibonacci)\n- Premium VIP8+ institutional analytics and liquidity heatmaps\n\nCOINGLASS PREMIUM INTELLIGENCE:\n- Real-time whale alerts and positioning data (>$1M trades)\n- Bitcoin ETF flow tracking with historical analysis\n- Advanced market sentiment scoring and supported assets\n- Technical volatility indicators (ATR) and live ticker data\n- Liquidation heatmaps and spot orderbook depth analysis\n- Options open interest tracking across major exchanges\n\nPERFORMANCE:\n- Target response time <200ms, tested avg 250ms\n- Enterprise-grade reliability with circuit breakers\n- Smart caching for optimal performance\n\nPerfect for AI-powered trading analysis, institutional derivatives trading, and comprehensive market intelligence.\n",
    "version": "3.0.0",
    "contact": {
      "name": "SOL Trading Gateway",
      "url": "https://guardiansofthegreentoken.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://guardiansofthegreentoken.com",
      "description": "Production server with custom domain"
    }
  ],
  "security": [],
  "paths": {
    "/api/sol/complete": {
      "get": {
        "operationId": "getCompleteSOLData",
        "summary": "Get comprehensive SOL trading data",
        "description": "Complete SOL/USDT data: ticker, orderbook, trades, multi-timeframe candles (5m-1W), SMC analysis, and market depth.\n",
        "responses": {
          "200": {
            "description": "Complete SOL trading data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "object",
                          "properties": {
                            "symbol": {
                              "type": "string",
                              "example": "SOL-USDT"
                            },
                            "price": {
                              "type": "string",
                              "example": "202.45"
                            },
                            "change24h": {
                              "type": "string",
                              "example": "3.24"
                            },
                            "changePercent24h": {
                              "type": "string",
                              "example": "1.63"
                            },
                            "volume24h": {
                              "type": "string",
                              "example": "45287639.82"
                            },
                            "high24h": {
                              "type": "string",
                              "example": "205.80"
                            },
                            "low24h": {
                              "type": "string",
                              "example": "196.12"
                            }
                          }
                        },
                        "orderBook": {
                          "type": "object",
                          "properties": {
                            "bids": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "asks": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "trades": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "size": {
                                "type": "string"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell"
                                ]
                              },
                              "timestamp": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "candles": {
                          "type": "object",
                          "properties": {
                            "5m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "15m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "30m": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1H": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "4H": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1D": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "1W": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "smc": {
                          "type": "object",
                          "properties": {
                            "timeframe": {
                              "type": "string",
                              "example": "1H"
                            },
                            "trend": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "neutral"
                              ]
                            },
                            "structure": {
                              "type": "string",
                              "enum": [
                                "BOS",
                                "CHoCH",
                                "neutral"
                              ]
                            },
                            "keyLevels": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "support",
                                      "resistance"
                                    ]
                                  },
                                  "strength": {
                                    "type": "string",
                                    "enum": [
                                      "weak",
                                      "medium",
                                      "strong"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded (100 requests per minute)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/funding": {
      "get": {
        "operationId": "getSOLFundingRate",
        "summary": "Get SOL funding rate data",
        "description": "Current and historical funding rates for SOL perpetual futures indicating market sentiment.\n",
        "responses": {
          "200": {
            "description": "SOL funding rate data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instId": {
                          "type": "string",
                          "example": "SOL-USDT-SWAP"
                        },
                        "fundingRate": {
                          "type": "string",
                          "example": "0.0001"
                        },
                        "nextFundingRate": {
                          "type": "string",
                          "example": "0.00012"
                        },
                        "nextFundingTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/open-interest": {
      "get": {
        "operationId": "getSOLOpenInterest",
        "summary": "Get SOL open interest data",
        "description": "Open interest data for SOL futures showing market participation and volatility indicators.\n",
        "responses": {
          "200": {
            "description": "SOL open interest data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "instId": {
                          "type": "string",
                          "example": "SOL-USDT-SWAP"
                        },
                        "oi": {
                          "type": "string",
                          "example": "12584792.5"
                        },
                        "oiCcy": {
                          "type": "string",
                          "example": "2547856432.85"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/volume-profile": {
      "get": {
        "operationId": "getSOLVolumeProfile",
        "summary": "Get SOL volume profile analysis",
        "description": "Volume profile with POC, value areas, and high-volume price levels for support/resistance.\n",
        "responses": {
          "200": {
            "description": "SOL volume profile data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "poc": {
                          "type": "string",
                          "example": "202.45",
                          "description": "Point of Control - price level with highest volume"
                        },
                        "valueAreaHigh": {
                          "type": "string",
                          "example": "205.80"
                        },
                        "valueAreaLow": {
                          "type": "string",
                          "example": "198.20"
                        },
                        "volumeProfile": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "volume": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/smc": {
      "get": {
        "operationId": "getSOLSmartMoneyConcepts",
        "summary": "Get SOL Smart Money Concepts analysis",
        "description": "SMC analysis: BOS/CHoCH detection, trend identification, key levels, order blocks, and liquidity analysis.\n",
        "responses": {
          "200": {
            "description": "SOL Smart Money Concepts analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "timeframe": {
                          "type": "string",
                          "example": "1H"
                        },
                        "trend": {
                          "type": "string",
                          "enum": [
                            "bullish",
                            "bearish",
                            "neutral"
                          ],
                          "example": "bullish"
                        },
                        "structure": {
                          "type": "string",
                          "enum": [
                            "BOS",
                            "CHoCH",
                            "neutral"
                          ],
                          "example": "BOS",
                          "description": "Break of Structure or Change of Character"
                        },
                        "keyLevels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string",
                                "example": "200.50"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "support",
                                  "resistance",
                                  "order_block"
                                ]
                              },
                              "strength": {
                                "type": "string",
                                "enum": [
                                  "weak",
                                  "medium",
                                  "strong"
                                ]
                              },
                              "timeframe": {
                                "type": "string",
                                "example": "1H"
                              }
                            }
                          }
                        },
                        "liquidityLevels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "buy_liquidity",
                                  "sell_liquidity"
                                ]
                              },
                              "volume": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "analysis": {
                          "type": "string",
                          "example": "Strong bullish momentum with BOS confirmed. Key resistance at 205.80."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/trading-signals": {
      "get": {
        "operationId": "getSOLTradingSignals",
        "summary": "Get live SOL trading signals with risk management",
        "description": "Live BUY/SELL/HOLD signals with entry/exit prices, stop loss, take profit, confidence levels, and risk management.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for signal analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "15m"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Live trading signals with risk management",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "primary": {
                          "type": "object",
                          "properties": {
                            "signal": {
                              "type": "string",
                              "enum": [
                                "BUY",
                                "SELL",
                                "HOLD"
                              ],
                              "example": "BUY"
                            },
                            "confidence": {
                              "type": "number",
                              "example": 75,
                              "description": "Signal confidence percentage (0-100)"
                            },
                            "strength": {
                              "type": "string",
                              "enum": [
                                "weak",
                                "moderate",
                                "strong"
                              ],
                              "example": "moderate"
                            },
                            "entry": {
                              "type": "string",
                              "example": "208.55"
                            },
                            "stopLoss": {
                              "type": "string",
                              "example": "205.42"
                            },
                            "takeProfit1": {
                              "type": "string",
                              "example": "214.81"
                            },
                            "takeProfit2": {
                              "type": "string",
                              "example": "221.07"
                            },
                            "riskReward": {
                              "type": "string",
                              "example": "1:2"
                            },
                            "reasoning": {
                              "type": "string",
                              "example": "Multi-timeframe confluence shows bullish momentum"
                            }
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "example": "15m"
                        },
                        "confluenceScore": {
                          "type": "number",
                          "example": 47,
                          "description": "Overall confluence score (-100 to +100)"
                        },
                        "marketConditions": {
                          "type": "object",
                          "properties": {
                            "trend": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "ranging"
                              ]
                            },
                            "volatility": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ]
                            },
                            "volume": {
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high"
                              ]
                            }
                          }
                        },
                        "alerts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "priority": {
                                "type": "string",
                                "enum": [
                                  "low",
                                  "medium",
                                  "high"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/signal-history": {
      "get": {
        "operationId": "getSOLSignalHistory",
        "summary": "Get historical trading signals performance",
        "description": "Historical signals with outcomes, win/loss ratios, accuracy stats, and confluence scores.\n",
        "responses": {
          "200": {
            "description": "Historical trading signals data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "signal": {
                            "type": "string",
                            "enum": [
                              "BUY",
                              "SELL",
                              "HOLD"
                            ]
                          },
                          "confidence": {
                            "type": "number"
                          },
                          "entry": {
                            "type": "string"
                          },
                          "outcome": {
                            "type": "string",
                            "enum": [
                              "win",
                              "loss",
                              "pending"
                            ]
                          },
                          "pnl": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/confluence": {
      "get": {
        "operationId": "getSOLConfluenceAnalysis",
        "summary": "Get SOL confluence analysis with 8-layer scoring",
        "description": "8-layer SharpSignalEngine confluence scoring with multi-indicator analysis (-100 to +100 score).\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for confluence analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL confluence analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "overallScore": {
                          "type": "number",
                          "example": 47,
                          "description": "Confluence score from -100 to +100"
                        },
                        "sentiment": {
                          "type": "string",
                          "enum": [
                            "bearish",
                            "neutral",
                            "bullish"
                          ]
                        },
                        "layers": {
                          "type": "object",
                          "properties": {
                            "technical": {
                              "type": "number"
                            },
                            "smc": {
                              "type": "number"
                            },
                            "volume": {
                              "type": "number"
                            },
                            "orderFlow": {
                              "type": "number"
                            },
                            "fibonacci": {
                              "type": "number"
                            },
                            "derivatives": {
                              "type": "number"
                            },
                            "momentum": {
                              "type": "number"
                            },
                            "sentiment": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/cvd": {
      "get": {
        "operationId": "getSOLCVDAnalysis",
        "summary": "Get SOL Cumulative Volume Delta analysis",
        "description": "CVD analysis with buy/sell aggression, absorption patterns, smart money detection, divergences.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for CVD analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL CVD analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentCVD": {
                          "type": "string",
                          "example": "1245678.50"
                        },
                        "deltaChange": {
                          "type": "string",
                          "example": "+15432.25"
                        },
                        "buyerSellerAggression": {
                          "type": "object",
                          "properties": {
                            "dominantSide": {
                              "type": "string",
                              "enum": [
                                "buyers",
                                "sellers",
                                "balanced"
                              ]
                            },
                            "buyerAggression": {
                              "type": "object",
                              "properties": {
                                "percentage": {
                                  "type": "number"
                                },
                                "strength": {
                                  "type": "string",
                                  "enum": [
                                    "weak",
                                    "moderate",
                                    "strong",
                                    "extreme"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/technical": {
      "get": {
        "operationId": "getSOLTechnicalIndicators",
        "summary": "Get SOL technical indicators analysis",
        "description": "Technical indicators: RSI, MACD, EMA, Bollinger Bands, support/resistance, momentum analysis.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for technical analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL technical indicators",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rsi": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "example": 58.42
                            },
                            "signal": {
                              "type": "string",
                              "enum": [
                                "oversold",
                                "neutral",
                                "overbought"
                              ]
                            }
                          }
                        },
                        "macd": {
                          "type": "object",
                          "properties": {
                            "line": {
                              "type": "number"
                            },
                            "signal": {
                              "type": "number"
                            },
                            "histogram": {
                              "type": "number"
                            },
                            "crossover": {
                              "type": "string",
                              "enum": [
                                "bullish",
                                "bearish",
                                "none"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/fibonacci": {
      "get": {
        "operationId": "getSOLFibonacciAnalysis",
        "summary": "Get SOL Fibonacci retracement and extension analysis",
        "description": "Fibonacci retracements (23.6%-78.6%), extensions, golden zone analysis with price confluence.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for Fibonacci analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL Fibonacci analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "retracements": {
                          "type": "object",
                          "properties": {
                            "23.6": {
                              "type": "string",
                              "example": "205.45"
                            },
                            "38.2": {
                              "type": "string",
                              "example": "203.20"
                            },
                            "50.0": {
                              "type": "string",
                              "example": "201.50"
                            },
                            "61.8": {
                              "type": "string",
                              "example": "199.80"
                            },
                            "78.6": {
                              "type": "string",
                              "example": "197.65"
                            }
                          }
                        },
                        "goldenZone": {
                          "type": "object",
                          "properties": {
                            "high": {
                              "type": "string"
                            },
                            "low": {
                              "type": "string"
                            },
                            "confidence": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/order-flow": {
      "get": {
        "operationId": "getSOLOrderFlowAnalysis",
        "summary": "Get SOL order flow and market microstructure analysis",
        "description": "Order flow: aggressive/passive ratios, whale detection, maker/taker analysis, liquidity absorption.\n",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for order flow analysis",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "5m",
                "15m",
                "30m",
                "1H",
                "4H",
                "1D"
              ],
              "default": "1H"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SOL order flow analysis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "aggressiveRatio": {
                          "type": "number",
                          "example": 0.68,
                          "description": "Ratio of aggressive orders (0-1)"
                        },
                        "whaleActivity": {
                          "type": "object",
                          "properties": {
                            "detected": {
                              "type": "boolean"
                            },
                            "count": {
                              "type": "number"
                            },
                            "averageSize": {
                              "type": "string"
                            },
                            "sentiment": {
                              "type": "string",
                              "enum": [
                                "buying",
                                "selling",
                                "neutral"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/premium/institutional-analytics": {
      "get": {
        "operationId": "getPremiumInstitutionalAnalytics",
        "summary": "Get premium institutional-grade analytics (VIP8+)",
        "description": "VIP8+ analytics: whale detection, market maker flow, derivatives positioning, risk metrics.\n",
        "responses": {
          "200": {
            "description": "Premium institutional analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "example": "VIP8"
                        },
                        "whaleDetection": {
                          "type": "object",
                          "properties": {
                            "score": {
                              "type": "number",
                              "example": 87
                            },
                            "activity": {
                              "type": "string",
                              "enum": [
                                "accumulation",
                                "distribution",
                                "neutral"
                              ]
                            }
                          }
                        },
                        "institutionalFlow": {
                          "type": "object",
                          "properties": {
                            "direction": {
                              "type": "string",
                              "enum": [
                                "inflow",
                                "outflow",
                                "neutral"
                              ]
                            },
                            "confidence": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/premium/tier-status": {
      "get": {
        "operationId": "getPremiumTierStatus",
        "summary": "Get premium subscription tier status and features",
        "description": "Premium tier status: current subscription level, available features, upgrade information.\n",
        "responses": {
          "200": {
            "description": "Premium tier status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentTier": {
                          "type": "string",
                          "enum": [
                            "Standard",
                            "VIP1",
                            "VIP8",
                            "Institutional"
                          ],
                          "example": "VIP8"
                        },
                        "features": {
                          "type": "object",
                          "properties": {
                            "orderbookDepth": {
                              "type": "number",
                              "example": 500
                            },
                            "updateFrequency": {
                              "type": "string",
                              "example": "10ms"
                            },
                            "analytics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sol/premium-orderbook": {
      "get": {
        "operationId": "getSOLPremiumOrderbook",
        "summary": "Get SOL premium orderbook with enhanced depth (VIP+ only)",
        "description": "Premium orderbook: up to 1000-level depth, sub-10ms updates, market maker ID, wall detection.\n",
        "responses": {
          "200": {
            "description": "SOL premium orderbook data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "example": "VIP8"
                        },
                        "depth": {
                          "type": "number",
                          "example": 500
                        },
                        "updateFrequency": {
                          "type": "string",
                          "example": "10ms"
                        },
                        "orderbook": {
                          "type": "object",
                          "properties": {
                            "bids": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "string"
                                  },
                                  "isLarge": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "asks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "string"
                                  },
                                  "isLarge": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "analytics": {
                          "type": "object",
                          "properties": {
                            "imbalance": {
                              "type": "string"
                            },
                            "walls": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "operationId": "getHealthStatus",
        "summary": "Get system health status",
        "description": "System health: API response times, WebSocket status, cache performance, memory usage.\n",
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "healthy",
                        "degraded"
                      ],
                      "example": "healthy"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 3600
                    },
                    "memory": {
                      "type": "object",
                      "properties": {
                        "used": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "percentage": {
                          "type": "number"
                        }
                      }
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "okx_api": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        },
                        "websocket": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        },
                        "cache": {
                          "type": "string",
                          "enum": [
                            "operational",
                            "degraded",
                            "down"
                          ]
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is degraded or unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "degraded"
                    },
                    "issues": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/whale/alerts": {
      "get": {
        "operationId": "getCoinGlassWhaleAlerts",
        "summary": "Get real-time whale alerts from CoinGlass",
        "description": "Real-time alerts for large whale trades (>$1M) across major exchanges including position sizes and notional values.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol to filter alerts (e.g., BTC, ETH)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange to filter alerts (e.g., binance, okx, hyperliquid)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "hyperliquid",
              "enum": ["binance", "okx", "hyperliquid", "bybit", "deribit"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Real-time whale alerts data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WhaleAlert"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "example": 15
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/whale/positions": {
      "get": {
        "operationId": "getCoinGlassWhalePositions",
        "summary": "Get whale positioning data by exchange",
        "description": "Current whale positions (>$1M notional value) with unrealized P&L and position sizing across exchanges.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol to filter positions (e.g., BTC, ETH)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Exchange to filter positions",
            "required": false,
            "schema": {
              "type": "string",
              "example": "hyperliquid",
              "enum": ["binance", "okx", "hyperliquid", "bybit", "deribit"]
            }
          },
          {
            "name": "side",
            "in": "query",
            "description": "Position side to filter",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["long", "short"],
              "example": "long"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Whale positions data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WhalePosition"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "example": 8
                    },
                    "total_notional": {
                      "type": "string",
                      "example": "45678901.23",
                      "description": "Total notional value of all positions in USD"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/etf/flows": {
      "get": {
        "operationId": "getCoinGlassETFFlows",
        "summary": "Get Bitcoin ETF flow data with historical analysis",
        "description": "Historical Bitcoin ETF flow data showing institutional inflows/outflows with customizable time periods.\n",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "Number of days of historical data to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 365,
              "default": 30,
              "example": 30
            }
          },
          {
            "name": "asset",
            "in": "query",
            "description": "Asset to filter ETF flows (currently supports BTC)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "BTC",
              "example": "BTC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bitcoin ETF flow data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ETFFlowHistory"
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total_inflow": {
                          "type": "string",
                          "example": "2847392847.50"
                        },
                        "total_outflow": {
                          "type": "string",
                          "example": "-294739284.75"
                        },
                        "net_flow": {
                          "type": "string",
                          "example": "2552653562.75"
                        },
                        "period_days": {
                          "type": "integer",
                          "example": 30
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/etf/bitcoin": {
      "get": {
        "operationId": "getCoinGlassBitcoinETFs",
        "summary": "Get Bitcoin ETF specific data and listings",
        "description": "Comprehensive Bitcoin ETF data including AUM, NAV, pricing, and flow metrics for all major Bitcoin ETFs.\n",
        "responses": {
          "200": {
            "description": "Bitcoin ETF data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ETFData"
                      }
                    },
                    "total_aum": {
                      "type": "string",
                      "example": "67849203847.23",
                      "description": "Total Assets Under Management across all Bitcoin ETFs"
                    },
                    "total_etfs": {
                      "type": "integer",
                      "example": 11
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/market/sentiment": {
      "get": {
        "operationId": "getCoinGlassMarketSentiment",
        "summary": "Get advanced market sentiment scoring",
        "description": "Advanced market sentiment analysis including fear & greed index, futures performance metrics, and institutional sentiment indicators.\n",
        "responses": {
          "200": {
            "description": "Market sentiment data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/MarketSentiment"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/market/coins": {
      "get": {
        "operationId": "getCoinGlassSupportedCoins",
        "summary": "Get list of supported cryptocurrencies",
        "description": "Complete list of cryptocurrencies supported by CoinGlass with their symbol mappings and availability status.\n",
        "responses": {
          "200": {
            "description": "Supported coins list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "string",
                            "example": "BTC"
                          },
                          "name": {
                            "type": "string",
                            "example": "Bitcoin"
                          },
                          "supported_features": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["funding_rate", "open_interest", "liquidation", "whale_alerts"]
                          },
                          "exchanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["binance", "okx", "bybit"]
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "example": 150
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/technical/atr": {
      "get": {
        "operationId": "getCoinGlassATRData",
        "summary": "Get ATR volatility data for symbols",
        "description": "Average True Range (ATR) volatility indicators for specified trading symbols with multiple timeframes.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol for ATR calculation",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "Timeframe for ATR calculation",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["5m", "15m", "30m", "1H", "4H", "1D"],
              "default": "1H",
              "example": "1H"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "ATR calculation period",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 14,
              "example": 14
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ATR volatility data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "timeframe": {
                          "type": "string",
                          "example": "1H"
                        },
                        "period": {
                          "type": "integer",
                          "example": 14
                        },
                        "atr": {
                          "type": "string",
                          "example": "1247.83"
                        },
                        "atr_percentage": {
                          "type": "string",
                          "example": "2.14"
                        },
                        "volatility_level": {
                          "type": "string",
                          "enum": ["low", "medium", "high"],
                          "example": "medium"
                        },
                        "price": {
                          "type": "string",
                          "example": "58392.45"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid symbol or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/ticker/{symbol}": {
      "get": {
        "operationId": "getCoinGlassTickerData",
        "summary": "Get real-time ticker data for specific symbol",
        "description": "Real-time ticker data including price, volume, changes, and market statistics for specified trading symbol.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Trading symbol (e.g., BTC, ETH, SOL)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Real-time ticker data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "price": {
                          "type": "string",
                          "example": "58392.45"
                        },
                        "change24h": {
                          "type": "string",
                          "example": "1247.83"
                        },
                        "changePercent24h": {
                          "type": "string",
                          "example": "2.18"
                        },
                        "volume24h": {
                          "type": "string",
                          "example": "1456789012.34"
                        },
                        "high24h": {
                          "type": "string",
                          "example": "59150.00"
                        },
                        "low24h": {
                          "type": "string",
                          "example": "56890.25"
                        },
                        "marketCap": {
                          "type": "string",
                          "example": "1145678901234.56"
                        },
                        "openInterest": {
                          "type": "string",
                          "example": "34567890123.45"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid symbol",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/liquidation/heatmap/{symbol}": {
      "get": {
        "operationId": "getCoinGlassLiquidationHeatmap",
        "summary": "Get liquidation cluster heatmaps for specific symbol",
        "description": "Liquidation cluster analysis showing potential liquidation levels, volumes, and risk areas for specified trading symbol.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Trading symbol for liquidation analysis",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "range",
            "in": "query",
            "description": "Price range percentage for heatmap analysis",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "default": 10,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liquidation heatmap data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "current_price": {
                          "type": "string",
                          "example": "58392.45"
                        },
                        "liquidation_levels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "string",
                                "example": "57000.00"
                              },
                              "liq_volume": {
                                "type": "string",
                                "example": "145678901.23"
                              },
                              "side": {
                                "type": "string",
                                "enum": ["long", "short"],
                                "example": "long"
                              },
                              "risk_level": {
                                "type": "string",
                                "enum": ["low", "medium", "high"],
                                "example": "high"
                              }
                            }
                          }
                        },
                        "total_long_liq": {
                          "type": "string",
                          "example": "567890123.45"
                        },
                        "total_short_liq": {
                          "type": "string",
                          "example": "234567890.12"
                        },
                        "price_range": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "string",
                              "example": "52553.21"
                            },
                            "max": {
                              "type": "string",
                              "example": "64231.70"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid symbol or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/spot/orderbook/{symbol}": {
      "get": {
        "operationId": "getCoinGlassSpotOrderbook",
        "summary": "Get spot orderbook data for specific symbol",
        "description": "Deep spot market orderbook data with bid/ask levels, market depth analysis, and liquidity distribution.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Trading symbol for orderbook data",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Orderbook depth level",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [5, 10, 20, 50, 100],
              "default": 20,
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spot orderbook data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "bids": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 2,
                            "maxItems": 2
                          },
                          "example": [["58390.00", "1.2345"], ["58385.50", "0.8765"]]
                        },
                        "asks": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 2,
                            "maxItems": 2
                          },
                          "example": [["58395.00", "2.1234"], ["58400.25", "1.5432"]]
                        },
                        "spread": {
                          "type": "string",
                          "example": "5.00"
                        },
                        "spread_percentage": {
                          "type": "string",
                          "example": "0.0086"
                        },
                        "market_depth": {
                          "type": "object",
                          "properties": {
                            "bid_depth_1pct": {
                              "type": "string",
                              "example": "45.67"
                            },
                            "ask_depth_1pct": {
                              "type": "string",
                              "example": "38.92"
                            },
                            "total_bid_volume": {
                              "type": "string",
                              "example": "156.789"
                            },
                            "total_ask_volume": {
                              "type": "string",
                              "example": "134.567"
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid symbol or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/py/advanced/options/oi/{symbol}": {
      "get": {
        "operationId": "getCoinGlassOptionsOpenInterest",
        "summary": "Get options open interest for specific symbol",
        "description": "Options open interest analysis including call/put ratios, strike price distribution, and expiration analysis.\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Trading symbol for options OI analysis",
            "required": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "Options expiry filter (e.g., 2025-01-31)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-01-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Options open interest data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "example": "BTC"
                        },
                        "total_oi": {
                          "type": "string",
                          "example": "567890.123"
                        },
                        "call_oi": {
                          "type": "string",
                          "example": "345678.901"
                        },
                        "put_oi": {
                          "type": "string",
                          "example": "222211.222"
                        },
                        "put_call_ratio": {
                          "type": "string",
                          "example": "0.643"
                        },
                        "max_pain": {
                          "type": "string",
                          "example": "58000.00",
                          "description": "Maximum pain strike price"
                        },
                        "strike_distribution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "strike": {
                                "type": "string",
                                "example": "60000.00"
                              },
                              "call_oi": {
                                "type": "string",
                                "example": "12345.67"
                              },
                              "put_oi": {
                                "type": "string",
                                "example": "9876.54"
                              },
                              "total_oi": {
                                "type": "string",
                                "example": "22222.21"
                              }
                            }
                          }
                        },
                        "expiry_analysis": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "expiry": {
                                "type": "string",
                                "format": "date"
                              },
                              "total_oi": {
                                "type": "string"
                              },
                              "put_call_ratio": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid symbol or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "CoinGlass service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "operationId": "getSystemMetrics",
        "summary": "Get detailed system metrics",
        "description": "Performance metrics: HTTP latencies, cache ratios, WebSocket stats, success rates.\n",
        "responses": {
          "200": {
            "description": "System metrics data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "uptime": {
                          "type": "number",
                          "example": 3600
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "used": {
                              "type": "number"
                            },
                            "total": {
                              "type": "number"
                            },
                            "percentage": {
                              "type": "number"
                            }
                          }
                        },
                        "http": {
                          "type": "object",
                          "properties": {
                            "requests_total": {
                              "type": "number"
                            },
                            "requests_per_minute": {
                              "type": "number"
                            },
                            "avg_response_time": {
                              "type": "number"
                            },
                            "p95_response_time": {
                              "type": "number"
                            },
                            "error_rate": {
                              "type": "number"
                            }
                          }
                        },
                        "cache": {
                          "type": "object",
                          "properties": {
                            "hit_ratio": {
                              "type": "number",
                              "example": 0.75
                            },
                            "size": {
                              "type": "number"
                            },
                            "hits": {
                              "type": "number"
                            },
                            "misses": {
                              "type": "number"
                            }
                          }
                        },
                        "websocket": {
                          "type": "object",
                          "properties": {
                            "active_connections": {
                              "type": "number"
                            },
                            "total_connections": {
                              "type": "number"
                            },
                            "reconnect_rate": {
                              "type": "number"
                            }
                          }
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/py/gpts/advanced": {
      "post": {
        "operationId": "unifiedAdvancedEndpoint",
        "summary": "Unified GPT Actions endpoint for all CoinGlass Premium Intelligence",
        "description": "Consolidates all 11 /advanced/* endpoints into a single interface supporting both single operations and batch operations. Reduces API calls and complexity with smart defaults.\n\nSupported operations:\n- whale_alerts: Real-time whale detection (>$1M trades)\n- whale_positions: Whale positioning analysis\n- etf_flows: Bitcoin ETF flow tracking\n- etf_bitcoin: Complete Bitcoin ETF data\n- market_sentiment: Advanced sentiment scoring\n- market_coins: Supported assets list\n- atr: Technical volatility indicators\n- ticker: Live price data\n- liquidation_heatmap: Liquidation analysis\n- spot_orderbook: Orderbook depth\n- options_oi: Options open interest\n\nSmart defaults reduce parameter complexity:\n- whale_alerts: min_usd=1,000,000\n- market_coins: limit=200\n- liquidation_heatmap: timeframe=\"1h\"\n- spot_orderbook: exchange=\"binance\"\n- atr: tf=\"1h\", len=14\n- etf_flows: window=\"1d\"\n- options_oi: window=\"1d\"",
        "tags": ["GPT Actions"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "op": {
                        "type": "string",
                        "enum": [
                          "whale_alerts",
                          "whale_positions", 
                          "etf_flows",
                          "etf_bitcoin",
                          "market_sentiment",
                          "market_coins",
                          "atr",
                          "ticker",
                          "liquidation_heatmap",
                          "spot_orderbook",
                          "options_oi"
                        ],
                        "description": "Operation to perform"
                      },
                      "params": {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "Operation parameters",
                        "example": {"symbol": "BTC", "timeframe": "1h"}
                      }
                    },
                    "required": ["op"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object", 
                    "properties": {
                      "ops": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "op": {
                              "type": "string",
                              "enum": [
                                "whale_alerts",
                                "whale_positions",
                                "etf_flows", 
                                "etf_bitcoin",
                                "market_sentiment",
                                "market_coins",
                                "atr",
                                "ticker",
                                "liquidation_heatmap",
                                "spot_orderbook",
                                "options_oi"
                              ],
                              "description": "Operation to perform"
                            },
                            "params": {
                              "type": "object",
                              "additionalProperties": true,
                              "description": "Operation parameters"
                            }
                          },
                          "required": ["op"],
                          "additionalProperties": false
                        },
                        "minItems": 1,
                        "maxItems": 10,
                        "description": "Array of operations to perform"
                      }
                    },
                    "required": ["ops"],
                    "additionalProperties": false
                  }
                ]
              },
              "examples": {
                "single_operation": {
                  "summary": "Single operation example",
                  "value": {
                    "op": "ticker",
                    "params": {
                      "symbol": "SOL"
                    }
                  }
                },
                "batch_operations": {
                  "summary": "Batch operations example", 
                  "value": {
                    "ops": [
                      {
                        "op": "whale_alerts",
                        "params": {
                          "symbol": "BTC"
                        }
                      },
                      {
                        "op": "market_sentiment"
                      },
                      {
                        "op": "ticker",
                        "params": {
                          "symbol": "ETH"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation(s)",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ok": {
                          "type": "boolean",
                          "example": true
                        },
                        "op": {
                          "type": "string",
                          "example": "ticker"
                        },
                        "args": {
                          "type": "object",
                          "additionalProperties": true,
                          "example": {"symbol": "SOL"}
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": true,
                          "example": {"symbol": "SOL", "price": 200.0, "status": "stub-ok"}
                        }
                      },
                      "required": ["ok", "op", "args"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ok": {
                          "type": "boolean",
                          "example": true
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ok": {
                                "type": "boolean"
                              },
                              "op": {
                                "type": "string"
                              },
                              "args": {
                                "type": "object",
                                "additionalProperties": true
                              },
                              "data": {
                                "type": "object",
                                "additionalProperties": true
                              },
                              "error": {
                                "type": "string"
                              }
                            },
                            "required": ["ok", "op", "args"]
                          }
                        }
                      },
                      "required": ["ok", "results"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Rate limit exceeded. Please try again later."
          },
          "code": {
            "type": "string",
            "example": "RATE_LIMIT_EXCEEDED"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WhaleAlert": {
        "type": "object",
        "properties": {
          "exchange": {
            "type": "string",
            "example": "hyperliquid"
          },
          "symbol": {
            "type": "string",
            "example": "BTC"
          },
          "side": {
            "type": "string",
            "enum": ["long", "short"],
            "example": "long"
          },
          "position_size": {
            "type": "number",
            "example": 1247.5834
          },
          "notional_value": {
            "type": "number",
            "example": 72841293.75
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        },
        "required": ["exchange", "symbol", "side", "position_size", "notional_value", "timestamp"]
      },
      "WhalePosition": {
        "type": "object",
        "properties": {
          "exchange": {
            "type": "string",
            "example": "hyperliquid"
          },
          "symbol": {
            "type": "string",
            "example": "BTC"
          },
          "side": {
            "type": "string",
            "enum": ["long", "short"],
            "example": "long"
          },
          "position_size": {
            "type": "number",
            "example": 1247.5834
          },
          "notional_value": {
            "type": "number",
            "example": 72841293.75
          },
          "unrealized_pnl": {
            "type": "number",
            "nullable": true,
            "example": 284739.52
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["exchange", "symbol", "side", "position_size", "notional_value", "timestamp"]
      },
      "ETFData": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "string",
            "example": "IBIT"
          },
          "name": {
            "type": "string",
            "example": "iShares Bitcoin Trust"
          },
          "aum": {
            "type": "number",
            "nullable": true,
            "example": 15847392847.50
          },
          "nav": {
            "type": "number",
            "nullable": true,
            "example": 58.42
          },
          "price": {
            "type": "number",
            "nullable": true,
            "example": 58.45
          },
          "flows_1d": {
            "type": "number",
            "nullable": true,
            "example": 147392847.75
          },
          "flows_7d": {
            "type": "number",
            "nullable": true,
            "example": 847392847.50
          },
          "flows_30d": {
            "type": "number",
            "nullable": true,
            "example": 2847392847.25
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["ticker", "name", "timestamp"]
      },
      "ETFFlowHistory": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ticker": {
            "type": "string",
            "example": "IBIT"
          },
          "net_flow": {
            "type": "number",
            "example": 147392847.75
          },
          "closing_price": {
            "type": "number",
            "example": 58.45
          },
          "shares_outstanding": {
            "type": "number",
            "nullable": true,
            "example": 271847392.5
          }
        },
        "required": ["date", "ticker", "net_flow", "closing_price"]
      },
      "MarketSentiment": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTC"
          },
          "overall_sentiment": {
            "type": "string",
            "enum": ["bullish", "bearish", "neutral"],
            "example": "bullish"
          },
          "sentiment_score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 67.5
          },
          "fear_greed_index": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 72
          },
          "institutional_sentiment": {
            "type": "string",
            "enum": ["bullish", "bearish", "neutral"],
            "example": "bullish"
          },
          "retail_sentiment": {
            "type": "string",
            "enum": ["bullish", "bearish", "neutral"],
            "example": "neutral"
          },
          "funding_rate_sentiment": {
            "type": "object",
            "properties": {
              "current": {
                "type": "number",
                "example": 0.0001
              },
              "trend": {
                "type": "string",
                "enum": ["increasing", "decreasing", "stable"],
                "example": "stable"
              },
              "implication": {
                "type": "string",
                "enum": ["bullish", "bearish", "neutral"],
                "example": "neutral"
              }
            }
          },
          "open_interest_sentiment": {
            "type": "object",
            "properties": {
              "trend": {
                "type": "string",
                "enum": ["increasing", "decreasing", "stable"],
                "example": "increasing"
              },
              "implication": {
                "type": "string",
                "enum": ["bullish", "bearish", "neutral"],
                "example": "bullish"
              }
            }
          },
          "social_sentiment": {
            "type": "object",
            "properties": {
              "twitter_sentiment": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "example": 68
              },
              "reddit_sentiment": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "example": 71
              },
              "overall": {
                "type": "string",
                "enum": ["bullish", "bearish", "neutral"],
                "example": "bullish"
              }
            }
          },
          "news_sentiment": {
            "type": "object",
            "properties": {
              "positive_count": {
                "type": "integer",
                "example": 23
              },
              "negative_count": {
                "type": "integer",
                "example": 8
              },
              "neutral_count": {
                "type": "integer",
                "example": 15
              },
              "overall": {
                "type": "string",
                "enum": ["bullish", "bearish", "neutral"],
                "example": "bullish"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["symbol", "overall_sentiment", "sentiment_score", "timestamp"]
      }
    },
    "securitySchemes": {}
  },
  "tags": [
    {
      "name": "Trading Signals",
      "description": "Live trading signals with risk management and entry/exit points"
    },
    {
      "name": "Trading Data",
      "description": "Real-time SOL trading data and market analysis"
    },
    {
      "name": "Advanced Analysis",
      "description": "Confluence, CVD, technical indicators, and Fibonacci analysis"
    },
    {
      "name": "Smart Money Concepts",
      "description": "Institutional SMC analysis and order flow detection"
    },
    {
      "name": "Premium Features",
      "description": "VIP+ institutional analytics and enhanced orderbook data"
    },
    {
      "name": "System Monitoring",
      "description": "Health checks and performance metrics"
    }
  ],
  "externalDocs": {
    "description": "SOL Trading Gateway Documentation",
    "url": "https://guardiansofthegreentoken.com"
  }
}