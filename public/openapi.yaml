openapi: 3.1.0
info:
  title: SOL Crypto Data Gateway API
  description: |
    Advanced Solana (SOL) trading data gateway providing comprehensive real-time market data from OKX exchange.
    
    **ðŸš€ Core Features:**
    - **Real-time SOL-USDT data**: Live ticker with price, volume, 24h metrics
    - **7-Timeframe Candlestick Analysis**: 5m, 15m, 30m, 1H, 4H, 1D, 1W (500+ data points)
    - **Deep Order Book**: 50-level bid/ask spreads for market depth analysis
    - **Live Trade Flow**: Recent trades with buy/sell indicators and volume tracking
    - **System Monitoring**: Health checks, performance metrics, and operational logs
    - **WebSocket Streaming**: Real-time data feeds for professional applications
    
    **ðŸŽ¯ Use Cases:**
    - **AI-Powered Analysis**: GPT-5 crypto market intelligence and predictions
    - **Algorithmic Trading**: Data feeds for automated trading strategies
    - **Technical Analysis**: Multi-timeframe chart analysis from scalping to investing
    - **Market Monitoring**: Real-time alerts and portfolio tracking
    - **Research & Analytics**: Financial modeling and trend analysis
    
    **âš¡ Performance:**
    - Response time: 200-400ms average
    - Rate limit: 100 requests/minute
    - 99.9% uptime with auto-reconnection
    - SSL-secured with CORS enabled
  version: '2.1.0'
  contact:
    email: admin@guardiansofthegreentoken.com
    url: https://guardiansofthegreentoken.com
servers:
  - url: https://guardiansofthegreentoken.com
    description: Production server with SSL
    
tags:
  - name: Market Data
    description: Real-time SOL-USDT trading data and market analysis
  - name: System Monitoring  
    description: Health checks, metrics, and operational logging
  - name: WebSocket
    description: Real-time streaming capabilities
paths:
  /api/sol/complete:
    get:
      operationId: getCompleteSOLData
      summary: Get comprehensive SOL trading data
      description: Primary endpoint for complete SOL-USDT market data including real-time ticker, 7-timeframe candlesticks (5m to 1W), 50-level order book depth, recent trades, and metadata. Perfect for AI analysis, algorithmic trading, and market monitoring.
      tags:
        - Market Data
      responses:
        '200':
          description: Complete SOL trading data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      ticker:
                        type: object
                        description: "Real-time SOL-USDT market ticker data"
                        properties:
                          symbol:
                            type: string
                            example: "SOL-USDT"
                            description: "Trading pair symbol"
                          price:
                            type: string
                            example: "189.03"
                            description: "Current market price in USDT"
                          change24h:
                            type: string
                            example: "-5.07%"
                            description: "24-hour price change percentage"
                          high24h:
                            type: string
                            example: "199.48"
                            description: "24-hour highest price"
                          low24h:
                            type: string
                            example: "185.34"
                            description: "24-hour lowest price"
                          volume:
                            type: string
                            example: "1584966.454886"
                            description: "24-hour trading volume in SOL"
                          tradingVolume24h:
                            type: string
                            example: "299606209"
                            description: "24-hour trading volume in USDT"
                      candles:
                        type: object
                        properties:
                          5m:
                            type: array
                            description: "5-minute candles (100 bars, 8+ hours)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          15m:
                            type: array
                            description: "15-minute candles (96 bars, 24+ hours)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          30m:
                            type: array
                            description: "30-minute candles (48 bars, 24+ hours)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          1H:
                            type: array
                            description: "1-hour candles (72 bars, 3+ days)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          4H:
                            type: array
                            description: "4-hour candles (42 bars, 7+ days)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          1D:
                            type: array
                            description: "Daily candles (90 bars, 3+ months)"
                            items:
                              $ref: '#/components/schemas/Candle'
                          1W:
                            type: array
                            description: "Weekly candles (52 bars, 1+ year)"
                            items:
                              $ref: '#/components/schemas/Candle'
                      orderBook:
                        type: object
                        properties:
                          bids:
                            type: array
                            description: "50 levels of buy orders"
                            items:
                              type: array
                              items:
                                type: string
                              example: ["189.45", "125.67"]
                          asks:
                            type: array
                            description: "50 levels of sell orders"
                            items:
                              type: array
                              items:
                                type: string
                              example: ["189.50", "98.34"]
                      recentTrades:
                        type: array
                        description: "30 most recent trades"
                        items:
                          type: object
                          properties:
                            price:
                              type: string
                              example: "189.45"
                            size:
                              type: string
                              example: "12.5"
                            side:
                              type: string
                              enum: ["buy", "sell"]
                            timestamp:
                              type: string
                              example: "1756197000000"
                      lastUpdate:
                        type: string
                        format: date-time
                        example: "2025-08-26T08:30:00.000Z"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      operationId: getSystemHealth
      summary: Get comprehensive system health status
      description: |
        Returns detailed system health including service connectivity, performance metrics, and operational status.
        Essential for monitoring system availability and troubleshooting issues.
      tags:
        - System Monitoring
      responses:
        '200':
          description: System health information with detailed metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        enum: ["operational", "degraded", "down"]
                        example: "operational"
                        description: "Overall system status"
                      timestamp:
                        type: string
                        format: date-time
                        example: "2025-08-26T09:27:32.664Z"
                      services:
                        type: object
                        properties:
                          okx:
                            type: string
                            enum: ["connected", "error"]
                            example: "connected"
                            description: "OKX exchange API connection status"
                          api:
                            type: string
                            enum: ["operational", "degraded", "down"]
                            example: "operational"
                            description: "Internal API service status"
                      metrics:
                        type: object
                        properties:
                          responseTime:
                            type: number
                            example: 178
                            description: "Health check response time in milliseconds"
                          requestsToday:
                            type: number
                            example: 4
                            description: "Total API requests received today"
                          uptime:
                            type: string
                            example: "2880.092798736s"
                            description: "System uptime in seconds"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-08-26T09:27:32.664Z"
        '503':
          description: Service unavailable - system is down or degraded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/metrics:
    get:
      operationId: getSystemMetrics
      summary: Get detailed system performance metrics
      description: |
        Returns comprehensive system performance metrics including response times, request statistics, 
        and operational data. Useful for monitoring API performance and system optimization.
      tags:
        - System Monitoring
      responses:
        '200':
          description: Detailed system performance metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1d51fc62-1de4-4c73-be52-37560dafe1f4"
                        description: "Unique metrics instance identifier"
                      responseTime:
                        type: number
                        example: 226
                        description: "Average API response time in milliseconds"
                      requestsToday:
                        type: number
                        example: 4
                        description: "Total number of requests processed today"
                      timestamp:
                        type: string
                        format: date-time
                        example: "2025-08-26T09:27:31.743Z"
                        description: "Timestamp when metrics were collected"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-08-26T09:27:32.946Z"
                    description: "Response timestamp"
        '500':
          description: Failed to fetch metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/logs:
    get:
      operationId: getSystemLogs
      summary: Get recent system logs
      description: |
        Returns the 50 most recent system logs including API requests, errors, and operational events.
        Essential for debugging and monitoring system behavior.
      tags:
        - System Monitoring
      responses:
        '200':
          description: Recent system logs (last 50 entries)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    description: "Array of recent log entries"
                    items:
                      type: object
                      properties:
                        level:
                          type: string
                          enum: ["info", "warn", "error", "debug"]
                          example: "info"
                          description: "Log severity level"
                        message:
                          type: string
                          example: "API request completed successfully"
                          description: "Log message content"
                        details:
                          type: string
                          example: "GET /api/sol/complete - 233ms - 200 OK"
                          description: "Additional log details"
                        timestamp:
                          type: string
                          format: date-time
                          example: "2025-08-26T09:27:31.743Z"
                          description: "When the log entry was created"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-08-26T09:27:32.946Z"
                    description: "Response timestamp"
        '500':
          description: Failed to fetch logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/sol/funding:
    get:
      operationId: getSOLFundingRate
      summary: Get SOL-USDT-SWAP funding rate data
      description: Real-time funding rate information for SOL perpetual swap contracts including current rate, next funding time, premium, interest rate, and settlement status. Critical for derivatives trading analysis.
      tags:
        - Market Data
      responses:
        '200':
          description: SOL funding rate data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      instId:
                        type: string
                        example: "SOL-USDT-SWAP"
                      fundingRate:
                        type: string
                        example: "-0.0000215187911736"
                        description: "Current funding rate (negative = shorts pay longs)"
                      nextFundingTime:
                        type: string
                        example: "1756252800000"
                        description: "Next funding settlement timestamp"
                      premium:
                        type: string
                        example: "-0.0006365372374284"
                        description: "Premium rate between mark and index price"
                      interestRate:
                        type: string
                        example: "0.0001000000000000"
                        description: "Interest component of funding rate"
                      settState:
                        type: string
                        enum: ["settled", "processing"]
                        example: "settled"
                  timestamp:
                    type: string
                    example: "2025-08-26T10:42:47.898Z"

  /api/sol/open-interest:
    get:
      operationId: getSOLOpenInterest
      summary: Get SOL-USDT-SWAP open interest data
      description: Current open interest data for SOL perpetual swaps showing total outstanding contracts in SOL and USD value. Essential for market sentiment and liquidity analysis.
      tags:
        - Market Data
      responses:
        '200':
          description: SOL open interest data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      instId:
                        type: string
                        example: "SOL-USDT-SWAP"
                      instType:
                        type: string
                        example: "SWAP"
                      oi:
                        type: string
                        example: "3352778.23000000274"
                        description: "Open interest in SOL"
                      oiUsd:
                        type: string
                        example: "632065751.9196005165448"
                        description: "Open interest value in USD"
                  timestamp:
                    type: string
                    example: "2025-08-26T10:42:57.669Z"

  /api/sol/volume-profile:
    get:
      operationId: getSOLVolumeProfile
      summary: Get SOL volume profile analysis
      description: Volume profile data showing Point of Control (POC), High Volume Nodes (HVN), Low Volume Nodes (LVN), and Value Area analysis. Critical for support/resistance identification.
      tags:
        - Market Data
      parameters:
        - name: timeframe
          in: query
          description: Timeframe for volume profile calculation
          schema:
            type: string
            enum: ["5m", "15m", "30m", "1H", "4H", "1D"]
            default: "1H"
        - name: limit
          in: query
          description: Number of candles to analyze
          schema:
            type: integer
            minimum: 10
            maximum: 500
            default: 100
      responses:
        '200':
          description: SOL volume profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      poc:
                        type: string
                        example: "204.32"
                        description: "Point of Control - highest volume price level"
                      hvnLevels:
                        type: array
                        description: "High Volume Nodes - strong support/resistance levels"
                        items:
                          type: object
                          properties:
                            price:
                              type: string
                              example: "187.91"
                            volume:
                              type: string
                              example: "2806.81"
                            percentage:
                              type: string
                              example: "0.13"
                      lvnLevels:
                        type: array
                        description: "Low Volume Nodes - areas of fast price movement"
                        items:
                          type: object
                          properties:
                            price:
                              type: string
                              example: "185.56"
                            volume:
                              type: string
                              example: "194.78"
                            percentage:
                              type: string
                              example: "0.01"
                      valueArea:
                        type: object
                        description: "70% value area range"
                        properties:
                          high:
                            type: string
                            example: "195.22"
                          low:
                            type: string
                            example: "185.34"
                          percentage:
                            type: string
                            example: "70"
                      totalVolume:
                        type: string
                        example: "2145788.30"
                  timestamp:
                    type: string
                    example: "2025-08-26T10:42:58.371Z"

  /api/sol/smc:
    get:
      operationId: getSOLSmartMoneyConcepts
      summary: Get SOL Smart Money Concepts analysis
      description: Professional Smart Money Concepts (SMC) analysis including market structure, trend direction, structure breaks, liquidity zones, and institutional order flow patterns. Essential for advanced trading strategies.
      tags:
        - Market Data
      parameters:
        - name: timeframe
          in: query
          description: Timeframe for SMC analysis
          schema:
            type: string
            enum: ["5m", "15m", "30m", "1H", "4H", "1D"]
            default: "1H"
      responses:
        '200':
          description: SOL Smart Money Concepts analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      timeframe:
                        type: string
                        example: "1H"
                        description: "Analysis timeframe"
                      trend:
                        type: string
                        enum: ["bullish", "bearish", "ranging"]
                        example: "bullish"
                        description: "Overall market trend direction"
                      structureBreak:
                        type: object
                        properties:
                          direction:
                            type: string
                            enum: ["bullish", "bearish", "none"]
                            example: "bullish"
                          level:
                            type: string
                            example: "189.45"
                          strength:
                            type: string
                            enum: ["strong", "weak", "moderate"]
                            example: "strong"
                      liquidityZones:
                        type: object
                        properties:
                          buy:
                            type: array
                            description: "Buy-side liquidity levels"
                            items:
                              type: object
                              properties:
                                price:
                                  type: string
                                  example: "192.34"
                                strength:
                                  type: string
                                  example: "high"
                          sell:
                            type: array
                            description: "Sell-side liquidity levels"
                            items:
                              type: object
                              properties:
                                price:
                                  type: string
                                  example: "186.78"
                                strength:
                                  type: string
                                  example: "medium"
                      orderFlow:
                        type: object
                        properties:
                          bias:
                            type: string
                            enum: ["bullish", "bearish", "neutral"]
                            example: "bullish"
                          strength:
                            type: number
                            example: 7.5
                            description: "Order flow strength score (1-10)"
                      analysis:
                        type: string
                        example: "Market showing strong bullish structure with institutional buying interest at 186-187 zone"
                        description: "Human-readable market analysis"
                  timestamp:
                    type: string
                    example: "2025-08-26T10:42:59.123Z"

  /healthz:
    get:
      operationId: getDetailedHealthCheck
      summary: Get detailed system health with component status
      description: |
        Enhanced health check endpoint providing detailed component-level health status including OKX connectivity, 
        cache performance, memory usage, and WebSocket status. Returns HTTP 503 for degraded/down status.
      tags:
        - System Monitoring
      responses:
        '200':
          description: System is healthy and operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["ok", "degraded", "down"]
                    example: "ok"
                    description: "Overall system health status"
                  uptime:
                    type: number
                    example: 3456
                    description: "System uptime in seconds"
                  memory:
                    type: object
                    properties:
                      used:
                        type: number
                        example: 85
                        description: "Used memory in MB"
                      total:
                        type: number
                        example: 128
                        description: "Total available memory in MB"
                  components:
                    type: object
                    properties:
                      okx_rest:
                        type: string
                        enum: ["up", "down"]
                        example: "up"
                        description: "OKX REST API connectivity"
                      okx_ws:
                        type: string
                        enum: ["up", "down"]
                        example: "up"
                        description: "OKX WebSocket connectivity"
                      cache:
                        type: string
                        enum: ["healthy", "degraded", "down"]
                        example: "healthy"
                        description: "Cache system performance"
                      memory:
                        type: string
                        enum: ["ok", "warning", "critical"]
                        example: "ok"
                        description: "Memory usage status"
                  cache:
                    type: object
                    properties:
                      size:
                        type: number
                        example: 15
                        description: "Number of cached entries"
                      hits:
                        type: number
                        example: 234
                        description: "Cache hit count"
                      misses:
                        type: number
                        example: 45
                        description: "Cache miss count"
                      hitRatio:
                        type: string
                        example: "83.9%"
                        description: "Cache hit ratio percentage"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-03T10:25:13.442Z"
        '503':
          description: System is degraded or down
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      operationId: getBasicSystemMetrics
      summary: Get basic system performance metrics
      description: |
        Basic system metrics endpoint providing essential performance data including uptime, response times, 
        and request counts. Simplified version of /api/metrics for lightweight monitoring.
      tags:
        - System Monitoring
      responses:
        '200':
          description: Basic system metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      uptime:
                        type: number
                        example: 3456
                        description: "System uptime in seconds"
                      memory:
                        type: object
                        properties:
                          used:
                            type: number
                            example: 85
                          total:
                            type: number
                            example: 128
                      http:
                        type: object
                        properties:
                          count:
                            type: number
                            example: 1523
                            description: "Total HTTP requests processed"
                          p95:
                            type: number
                            example: 245
                            description: "95th percentile response time in ms"
                          errors:
                            type: number
                            example: 12
                            description: "Total error count"
                          errorRate:
                            type: string
                            example: "0.79%"
                            description: "Error rate percentage"
                      cache:
                        type: object
                        properties:
                          hits:
                            type: number
                            example: 234
                          misses:
                            type: number
                            example: 45
                          size:
                            type: number
                            example: 15
                          hitRatio:
                            type: string
                            example: "83.9%"
                      ws:
                        type: object
                        properties:
                          reconnects:
                            type: number
                            example: 2
                            description: "WebSocket reconnection count"
                          activeClients:
                            type: number
                            example: 5
                            description: "Currently connected WebSocket clients"
                          bufferedAmount:
                            type: number
                            example: 0
                            description: "Buffered data amount in bytes"
                      okx:
                        type: object
                        properties:
                          restStatus:
                            type: string
                            enum: ["up", "down"]
                            example: "up"
                          wsStatus:
                            type: string
                            enum: ["up", "down"]
                            example: "up"
                          lastRestCall:
                            type: number
                            example: 1756894189063
                            description: "Last REST API call timestamp"
                          lastWsMessage:
                            type: number
                            example: 1756894230456
                            description: "Last WebSocket message timestamp"
                          restLatency:
                            type: number
                            example: 245
                            description: "REST API latency in ms"
                          wsLatency:
                            type: number
                            example: 12
                            description: "WebSocket latency in ms"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-03T10:25:13.442Z"

  /ws:
    get:
      operationId: connectWebSocket
      summary: WebSocket connection for real-time streaming
      description: Real-time WebSocket endpoint for live SOL-USDT streaming. Connect to wss://guardiansofthegreentoken.com/ws for live ticker, order book, trades with auto-reconnection and health monitoring. Perfect for live dashboards.
      tags:
        - WebSocket
      responses:
        '101':
          description: WebSocket connection established
        '400':
          description: Bad WebSocket request
          
components:
  schemas:
    Candle:
      type: object
      description: "OHLCV candlestick data for technical analysis"
      properties:
        timestamp:
          type: string
          example: "1756200300000"
          description: "Unix timestamp in milliseconds"
        open:
          type: string
          example: "188.74"
          description: "Opening price for the time period"
        high:
          type: string
          example: "189.30"
          description: "Highest price during the time period"
        low:
          type: string
          example: "188.67"
          description: "Lowest price during the time period"
        close:
          type: string
          example: "189.03"
          description: "Closing price for the time period"
        volume:
          type: string
          example: "4915.351637"
          description: "Total trading volume in SOL for the time period"
    
    ErrorResponse:
      type: object
      description: "Standard error response format"
      properties:
        success:
          type: boolean
          example: false
          description: "Always false for error responses"
        error:
          type: string
          example: "Internal server error"
          description: "Human-readable error message"
        timestamp:
          type: string
          format: date-time
          description: "ISO timestamp when error occurred"
          example: "2025-08-26T09:27:32.664Z"